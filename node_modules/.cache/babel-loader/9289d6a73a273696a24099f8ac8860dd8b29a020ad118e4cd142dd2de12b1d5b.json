{"ast":null,"code":"var _jsxFileName = \"E:\\\\xampp\\\\htdocs\\\\react-counter-app\\\\src\\\\store.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/store.js\nimport React, { createContext, useContext, useState } from 'react';\nimport './Store.css'; // Importe o arquivo de estilo CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CounterContext = /*#__PURE__*/createContext();\nexport function CounterProvider({\n  children\n}) {\n  _s();\n  const [count, setCount] = useState(0);\n  const increment = () => {\n    setCount(count + 1);\n  };\n  const decrement = () => {\n    setCount(count - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(CounterContext.Provider, {\n    value: {\n      count,\n      increment,\n      decrement\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(CounterProvider, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = CounterProvider;\nexport function useCounter() {\n  _s2();\n  const context = useContext(CounterContext);\n  if (!context) {\n    throw new Error('useCounter must be used within a CounterProvider');\n  }\n  return context;\n}\n_s2(useCounter, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CounterProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CounterContext","CounterProvider","children","_s","count","setCount","increment","decrement","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCounter","_s2","context","Error","$RefreshReg$"],"sources":["E:/xampp/htdocs/react-counter-app/src/store.js"],"sourcesContent":["// src/store.js\r\nimport React, { createContext, useContext, useState } from 'react';\r\nimport './Store.css'; // Importe o arquivo de estilo CSS\r\n\r\nconst CounterContext = createContext();\r\n\r\nexport function CounterProvider({ children }) {\r\n  const [count, setCount] = useState(0);\r\n\r\n  const increment = () => {\r\n    setCount(count + 1);\r\n  };\r\n\r\n  const decrement = () => {\r\n    setCount(count - 1);\r\n  };\r\n\r\n  return (\r\n    <CounterContext.Provider value={{ count, increment, decrement }}>\r\n      {children}\r\n    </CounterContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCounter() {\r\n  const context = useContext(CounterContext);\r\n  if (!context) {\r\n    throw new Error('useCounter must be used within a CounterProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,cAAc,gBAAGL,aAAa,CAAC,CAAC;AAEtC,OAAO,SAASM,eAAeA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACtBD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAED,MAAMG,SAAS,GAAGA,CAAA,KAAM;IACtBF,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAED,oBACEL,OAAA,CAACC,cAAc,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL,KAAK;MAAEE,SAAS;MAAEC;IAAU,CAAE;IAAAL,QAAA,EAC7DA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B;AAACV,EAAA,CAhBeF,eAAe;AAAAa,EAAA,GAAfb,eAAe;AAkB/B,OAAO,SAASc,UAAUA,CAAA,EAAG;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGrB,UAAU,CAACI,cAAc,CAAC;EAC1C,IAAI,CAACiB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACrE;EACA,OAAOD,OAAO;AAChB;AAACD,GAAA,CANeD,UAAU;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}